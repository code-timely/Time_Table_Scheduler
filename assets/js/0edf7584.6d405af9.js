"use strict";(self.webpackChunktime_table_scheduler=self.webpackChunktime_table_scheduler||[]).push([[124],{369:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>t,contentTitle:()=>o,default:()=>a,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"SAT Solver","title":"SAT Solver Encoding","description":"The sat_solver.py module contains the core logic for encoding the scheduling problem as a SAT instance and invoking the solver. It employs the PySAT library with the Minisat solver.","source":"@site/docs/3. SAT Solver.md","sourceDirName":".","slug":"/SAT Solver","permalink":"/Time_Table_Scheduler/docs/SAT Solver","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/3. SAT Solver.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Local Setup","permalink":"/Time_Table_Scheduler/docs/Local Setup"}}');var l=n(4848),c=n(8453);const r={},o="SAT Solver Encoding",t={},d=[{value:"Key Components",id:"key-components",level:2},{value:"<code>function(num_courses, num_slots, courses, clash, m, clash_slots)</code>",id:"functionnum_courses-num_slots-courses-clash-m-clash_slots",level:3},{value:"<code>solver(num_courses, num_slots, courses, clashes, clash_slots)</code>",id:"solvernum_courses-num_slots-courses-clashes-clash_slots",level:3}];function h(s){const e={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,c.R)(),...s.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"sat-solver-encoding",children:"SAT Solver Encoding"})}),"\n",(0,l.jsxs)(e.p,{children:["The ",(0,l.jsx)(e.code,{children:"sat_solver.py"})," module contains the core logic for encoding the scheduling problem as a SAT instance and invoking the solver. It employs the ",(0,l.jsx)(e.a,{href:"https://pysathq.github.io/",children:"PySAT"})," library with the ",(0,l.jsx)(e.a,{href:"http://minisat.se/MiniSat.html",children:"Minisat solver"}),"."]}),"\n",(0,l.jsx)(e.h2,{id:"key-components",children:"Key Components"}),"\n",(0,l.jsx)(e.h3,{id:"functionnum_courses-num_slots-courses-clash-m-clash_slots",children:(0,l.jsx)(e.code,{children:"function(num_courses, num_slots, courses, clash, m, clash_slots)"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Inputs:"})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"num_courses"})," (int): Number of courses."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"num_slots"})," (int): Number of ",(0,l.jsx)(e.em,{children:"unique"})," slots."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"courses"})," (list of lists): ",(0,l.jsx)(e.code,{children:"courses[i]"})," is a list of slot indices that course ",(0,l.jsx)(e.em,{children:"i"})," can occupy."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"clash"})," (list of lists): ",(0,l.jsx)(e.code,{children:"clash[i]"})," is a list of course indices that cannot share a slot with course ",(0,l.jsx)(e.em,{children:"i"}),"."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"m"})," (int): Slot capacity parameter (maximum number of courses allowed in a slot)."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"clash_slots"})," (list of pairs): Each pair ",(0,l.jsx)(e.code,{children:"(s, t)"})," indicates that courses in slot ",(0,l.jsx)(e.code,{children:"s"})," and slot ",(0,l.jsx)(e.code,{children:"t"})," have additional clash restrictions."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.strong,{children:"Operation:"})}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["Creates a fresh ",(0,l.jsx)(e.code,{children:"Minisat22"})," solver instance."]}),"\n",(0,l.jsxs)(e.li,{children:["Constructs a 2D array ",(0,l.jsx)(e.code,{children:"arr"})," of integer variables of size ",(0,l.jsx)(e.code,{children:"[num_courses][num_slots]"}),".",(0,l.jsx)(e.br,{}),"\n","Each ",(0,l.jsx)(e.code,{children:"arr[i][j]"})," represents the proposition \u201ccourse ",(0,l.jsx)(e.em,{children:"i"})," is assigned to slot ",(0,l.jsx)(e.em,{children:"j"}),".\u201d"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Course Assignment Constraints:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Adds a clause ensuring at least one of ",(0,l.jsx)(e.code,{children:"arr[i][j]"})," is true for ",(0,l.jsx)(e.code,{children:"j"})," in ",(0,l.jsx)(e.code,{children:"courses[i]"})," (so each course is assigned to one of its allowed slots)."]}),"\n",(0,l.jsxs)(e.li,{children:["Adds pairwise clauses forbidding two slots for the same course simultaneously (for all pairs of slots ",(0,l.jsx)(e.code,{children:"j, k"})," in ",(0,l.jsx)(e.code,{children:"courses[i]"}),", add ",(0,l.jsx)(e.code,{children:"(-arr[i][j] OR -arr[i][k])"}),")."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Course Clash Constraints:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["For each pair of courses ",(0,l.jsx)(e.code,{children:"(i, k)"})," in ",(0,l.jsx)(e.code,{children:"clash[i]"}),", adds clauses ",(0,l.jsx)(e.code,{children:"(-arr[i][j] OR -arr[k][j])"})," for all slots ",(0,l.jsx)(e.code,{children:"j"}),", preventing them from sharing the same slot."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Slot Capacity Constraints:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Builds a list ",(0,l.jsx)(e.code,{children:"slot[j]"})," of courses that could be in slot ",(0,l.jsx)(e.code,{children:"j"}),"."]}),"\n",(0,l.jsxs)(e.li,{children:["For each slot ",(0,l.jsx)(e.code,{children:"j"}),", if there are \u2265 ",(0,l.jsx)(e.code,{children:"m"})," courses, generates all combinations of those courses of size ",(0,l.jsx)(e.code,{children:"m"})," and adds a clause forbidding all of them being together in slot ",(0,l.jsx)(e.code,{children:"j"})," (i.e., at most ",(0,l.jsx)(e.code,{children:"m-1"})," courses in slot ",(0,l.jsx)(e.code,{children:"j"}),")."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Additional Clash-Slot Constraints:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["For each pair ",(0,l.jsx)(e.code,{children:"(s, t)"})," in ",(0,l.jsx)(e.code,{children:"clash_slots"}),", iterates over courses ",(0,l.jsx)(e.code,{children:"j"})," in slot ",(0,l.jsx)(e.code,{children:"s"})," and ",(0,l.jsx)(e.code,{children:"k"})," in slot ",(0,l.jsx)(e.code,{children:"t"}),".",(0,l.jsx)(e.br,{}),"\n","If course ",(0,l.jsx)(e.code,{children:"j"})," conflicts with course ",(0,l.jsx)(e.code,{children:"k"}),", adds ",(0,l.jsx)(e.code,{children:"(-arr[j][s] OR -arr[k][t])"})," to enforce that conflict."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["Calls ",(0,l.jsx)(e.code,{children:"g.solve()"})," to run the SAT solver.","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["If satisfiable, collects all positive assignments in the model and converts them to slot indices (",(0,l.jsx)(e.code,{children:"(var-1) % num_slots"})," for each positive ",(0,l.jsx)(e.code,{children:"var"}),")."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["Returns ",(0,l.jsx)(e.code,{children:"(v, ans)"})," where:","\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"v"})," is a boolean indicating satisfiability."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"ans"})," is the list of assigned slot indices for each course."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"solvernum_courses-num_slots-courses-clashes-clash_slots",children:(0,l.jsx)(e.code,{children:"solver(num_courses, num_slots, courses, clashes, clash_slots)"})}),"\n",(0,l.jsxs)(e.p,{children:["Defined in ",(0,l.jsx)(e.code,{children:"pages/Head.py"}),", this function wraps ",(0,l.jsx)(e.code,{children:"function(...)"})," in a loop:"]}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["It increments the slot capacity parameter ",(0,l.jsx)(e.code,{children:"m"})," starting from 0."]}),"\n",(0,l.jsxs)(e.li,{children:["Calls ",(0,l.jsx)(e.code,{children:"function(...)"})," with the current ",(0,l.jsx)(e.code,{children:"m"}),"."]}),"\n",(0,l.jsxs)(e.li,{children:["Repeats until a satisfiable assignment (",(0,l.jsx)(e.code,{children:"v == True"}),") is found."]}),"\n",(0,l.jsxs)(e.li,{children:["Returns the solution ",(0,l.jsx)(e.code,{children:"ans"})," for the minimal ",(0,l.jsx)(e.code,{children:"m"}),"."]}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"This strategy automatically determines the minimum slot capacity required for a valid schedule."}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.p,{children:"With this encoding, the scheduler ensures:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Every course"})," is assigned to exactly one of its preferred slots."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"No two conflicting courses"})," share the same time slot."]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"Slot capacities"})," are respected, automatically increasing capacity until a solution is found."]}),"\n"]})]})}function a(s={}){const{wrapper:e}={...(0,c.R)(),...s.components};return e?(0,l.jsx)(e,{...s,children:(0,l.jsx)(h,{...s})}):h(s)}},8453:(s,e,n)=>{n.d(e,{R:()=>r,x:()=>o});var i=n(6540);const l={},c=i.createContext(l);function r(s){const e=i.useContext(c);return i.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function o(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(l):s.components||l:r(s.components),i.createElement(c.Provider,{value:e},s.children)}}}]);