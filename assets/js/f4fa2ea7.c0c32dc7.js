"use strict";(self.webpackChunktime_table_scheduler=self.webpackChunktime_table_scheduler||[]).push([[537],{1346:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/Time_Table_Scheduler/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Interface","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Faculty Page","href":"/Time_Table_Scheduler/docs/Interface/1.1 Faculty Page","docId":"Interface/1.1 Faculty Page","unlisted":false},{"type":"link","label":"Head Page","href":"/Time_Table_Scheduler/docs/Interface/1.2 Head Page","docId":"Interface/1.2 Head Page","unlisted":false}]},{"type":"link","label":"Local Setup","href":"/Time_Table_Scheduler/docs/Local Setup","docId":"Local Setup","unlisted":false},{"type":"link","label":"SAT Solver Encoding","href":"/Time_Table_Scheduler/docs/SAT Solver","docId":"SAT Solver","unlisted":false}]},"docs":{"Interface/1.1 Faculty Page":{"id":"Interface/1.1 Faculty Page","title":"Faculty Page","description":"This page allows each faculty to fill their preferences of slot, clashes for their courses.","sidebar":"tutorialSidebar"},"Interface/1.2 Head Page":{"id":"Interface/1.2 Head Page","title":"Head Page","description":"This page asks for a password to authenticate if the person is actually is Head and have admin rights.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Timetable scheduling is a complex and critical administrative task in any academic institution, especially when multiple constraints and preferences are involved. This project aims to automate the generation of semester timetables for the Computer Science & Engineering (CSE) Department by incorporating faculty slot preferences and conflict resolution, ensuring an efficient and satisfactory allocation of courses.","sidebar":"tutorialSidebar"},"Local Setup":{"id":"Local Setup","title":"Local Setup","description":"1. Environment Setup","sidebar":"tutorialSidebar"},"SAT Solver":{"id":"SAT Solver","title":"SAT Solver Encoding","description":"The sat_solver.py module contains the core logic for encoding the scheduling problem as a SAT instance and invoking the solver. It employs the PySAT library with the Minisat solver.","sidebar":"tutorialSidebar"}}}}')}}]);