"use strict";(self.webpackChunktime_table_scheduler=self.webpackChunktime_table_scheduler||[]).push([[749],{3776:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Interface/1.1 Faculty Page","title":"Faculty Page","description":"This page allows each faculty to fill their preferences of slot, clashes for their courses.","source":"@site/docs/1. Interface/1.1 Faculty Page.md","sourceDirName":"1. Interface","slug":"/Interface/1.1 Faculty Page","permalink":"/Time_Table_Scheduler/docs/Interface/1.1 Faculty Page","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1. Interface/1.1 Faculty Page.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/Time_Table_Scheduler/docs/intro"},"next":{"title":"Head Page","permalink":"/Time_Table_Scheduler/docs/Interface/1.2 Head Page"}}');var n=s(4848),i=s(8453);const o={},l="Faculty Page",c={},a=[{value:"Q : What if the course is not listed in list of courses?",id:"q--what-if-the-course-is-not-listed-in-list-of-courses",level:3},{value:"Q : How to edit the preferences filled(in case it is filled wrong or need to be updated)?",id:"q--how-to-edit-the-preferences-filledin-case-it-is-filled-wrong-or-need-to-be-updated",level:3}];function d(e){const t={h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"faculty-page",children:"Faculty Page"})}),"\n",(0,n.jsx)(t.p,{children:"This page allows each faculty to fill their preferences of slot, clashes for their courses."}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Faculty first needs to select one course from list of courses."}),"\n",(0,n.jsx)(t.li,{children:"Then they will select their preferred slots from the various slots provided."}),"\n",(0,n.jsx)(t.li,{children:"Then, they can select courses with which they don't want their course to clash."}),"\n",(0,n.jsx)(t.li,{children:"Clicking on Submit, submits their preferences."}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"q--what-if-the-course-is-not-listed-in-list-of-courses",children:"Q : What if the course is not listed in list of courses?"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"A :"})," In this case, the Head/Admin needs to add that course to the courses list from Head Page. After that, the course will appear in the list here."]}),"\n",(0,n.jsx)(t.h3,{id:"q--how-to-edit-the-preferences-filledin-case-it-is-filled-wrong-or-need-to-be-updated",children:"Q : How to edit the preferences filled(in case it is filled wrong or need to be updated)?"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"A :"})," Just fill the preferences for that particular course again with new preferences."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>l});var r=s(6540);const n={},i=r.createContext(n);function o(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);